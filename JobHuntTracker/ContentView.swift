//
//  ContentView.swift
//  JobHuntTracker
//
//  Created by user248930 on 11/14/23.
//

import SwiftUI


struct JobApplicationsListView: View {
    
    @Environment(\.managedObjectContext) private var viewContext
    @StateObject private var viewModel: JobApplicationsViewModel = JobApplicationsViewModel()
    @State private var showingAddJobApplicationView = false
    
    var body: some View {
        NavigationStack {
            VStack(spacing: 40) {
                // Upper element view
                ProfileOverviewView(userName: "Hyusein", userTitle: "iOS Developer", applicationsThisMonth: 5, monthlyTarget: 10)
                    .padding(.horizontal)
                
                TopStatusView(statusCounts: viewModel.statusCounts)

                
                // List of job applications
                List(viewModel.jobApplications,  id: \.self) { jobApplication in
                    JobApplicationRow(application: jobApplication)
                        .listRowSeparator(.hidden)
                    //  Doing this to remove the right arrow generated by NavigationLink for some reason
                        .background(
                            NavigationLink("", destination:  JobApplicationDetailsView(jobApplication: jobApplication))
                                .opacity(0)
                        )
                }
                
                .navigationTitle("Jobs")
                
                .listStyle(PlainListStyle())
                .background(Color.orange)
                .cornerRadius(20)
                .edgesIgnoringSafeArea(.bottom)
                .padding(.top, -20)
                
            }
            .navigationBarItems(
                trailing: Button(action: {
                    showingAddJobApplicationView = true
                }) {
                    Image(systemName: "plus.circle.fill")
                }
            )
            .sheet(isPresented: $showingAddJobApplicationView) {
                AddJobApplicationView(onAddCompletion: {
                    viewModel.fetchJobApplications(viewContext: viewContext)
                })
            }
            
        }
        .background(Color.white)
        .onAppear {
            viewModel.fetchJobApplications(viewContext: viewContext)
        }
    }
    
    
    //    private func deleteItems(offsets: IndexSet) {
    //        withAnimation {
    //            offsets.map { viewModel.jobApplications[$0] }.forEach(viewContext.delete)
    //
    //            do {
    //                try viewContext.save()
    //            } catch {
    //                // Replace this implementation with code to handle the error appropriately.
    //                let nsError = error as NSError
    //                fatalError("Unresolved error \(nsError), \(nsError.userInfo)")
    //            }
    //        }
    //    }
}
